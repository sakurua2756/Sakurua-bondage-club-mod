// 膀胱功能
import { 功能基类 } from "./功能基类";
// 膀胱子界面ui属性
export let 膀胱系统ui属性 = {
    // 在主设置界面的按钮属性
    主界面设置按钮:{
        按钮文本:"膀胱设置",
        设置按钮位置:[500,200],
        设置按钮大小:[200,80]
    },

    // 子界面设置文本
    子界面标题:"膀胱设置",

    子UI:{
        总开关:{
            复选框位置:[200,200],
            复选框大小:[70,70],

            描述位置:[400,235],
            主词:"启用膀胱功能",
        },
        重置:{
            按钮文本:"重置",
            按钮位置:[200, 350],
            按钮大小:[200,80],

            输入框位置:[120,390],
            输入框大小:[120,80],
            
            按钮描述位置:[650, 390,-10],
            按钮主词:"！！！！重置膀胱设置",
            按钮详细:"！！！！警告，重置会恢复膀胱功能的所有设置为默认，请在按钮前的输入框内输入“YES”（区分大小写）来确认使用按钮"
        },
        翻页:{
            按钮位置:[1650,75],
            按钮大小:[120,90],
            按钮文本:"",
            按钮图片:""
        },
        膀胱大小:{
            输入框位置:[300,550],
            输入框大小:[200,80],
            主词:"ml,更改膀胱容积",
            输入框描述位置:[600,550,60],
            详情:"最大可容纳的尿液体积上限,单位ml,10-10000"
        },
        当前尿液:{
            位置:[900,235],
            // 未完成的动态颜色
            颜色:[
                "#FFFFFF", // 0 - 白色（无紧急）
                "#FFF0F0", // 1 - 极浅粉（极低）
                "#FFD5D5", // 2 - 浅粉（轻微）
                "#FFB6B6", // 3 - 粉红（低）
                "#FF9999", // 4 - 中等粉（注意）
                "#FF7777", // 5 - 暖粉（中等）
                "#FF5555", // 6 - 浅红（较高）
                "#FF3333", // 7 - 亮红（高）
                "#FF0000", // 8 - 正红（紧急）
                "#CC0000"  // 9 - 深红（最高紧急）
              ],
            文本:"当前尿液百分比: "
        },
        尿液增长:{
            输入框位置:[300,650],
            输入框大小:[200,80],
            主词:"ml.每分钟自然产生的尿液",
            输入框描述位置:[620,650,-10],
            详情:"每分钟自然增长的尿液,单位ml,0.1-1000"

        },
        漏尿阈值:{
            输入框位置:[300,750],
            输入框大小:[200,80],
            主词:"%.超过此阈值后就会随机漏尿",
            输入框描述位置:[650,750,-50],
            详情:"当尿液占据百分比超过这个设置值后,就和开始漏尿判断,5-95"
        },
        漏尿概率:{
            输入框位置:[300,850],
            输入框大小:[200,80],
            主词:"%.基础漏尿概率",
            输入框描述位置:[540,850,30],
            详情:"最低为1%, 当尿液超过漏尿阈值后每10秒的漏尿概率,随着膀胱越来越满溢会越来越高,最终会100%漏尿,1-100"
        },
        漏尿概率计算方式: {
            标题文本:"----漏尿概率计算方式----",
            标题文本位置:[300,200],

            // 线性
            复选框位置_1:[100,250],
            复选框大小_1:[70,70],
            描述位置_1:[230,290,30],
            主词_1:"线性",
            详情_1:"漏尿概率和尿液体积成1:1正比",

            // 指数
            复选框位置_2:[300,250],
            复选框大小_2:[70,70],
            描述位置_2:[430,290,90],
            主词_2:"指数",
            详情_2:"漏尿概率和尿液体积成指数比"
        }
    }
}; 

// 膀胱功能设置
export const 膀胱设置 = {
    // 子界面页码
    子界面页码:0,
    子界面总页码:4,

    总开关:true, // 膀胱功能的总开关
    玩家膀胱大小基准值:500, // 用于在损失中评估的基准值,仅用于计算当前玩家膀胱大小
    玩家膀胱大小: 500, //  可容纳的最大尿液（ml）
    玩家膀胱最大大小:10000, // 最大的膀胱大小
    玩家膀胱大小损失值:0, // 因为某些状态损失的最大膀胱大小,例如特定物品（如紧身衣）：减少10%膀胱大小（物理压迫膀胱）。

    当前尿液体积: 0,  // 当期存在的尿液体积（ml）

    // 尿液增长相关
    尿液增长速率: 1,  // 每分钟自然增长的尿液（ml）
    尿液增长随机值:[0.5,1.5], // 每次尿液增长时都需要进行的生成随机乘数,用于让尿急时间随机化
    总倍率:1.0,   // 尿液增长总倍率,
    食物尿液倍率: 1.2, // 当吃下食物后的一段时间内尿液自然增长的倍率加成
    食物尿液倍率时间: 30, // 当吃下食物后倍率加成多长时间（分钟）
    饮品尿液倍率: 2.0, // 当喝下饮品后的一段时间内尿液自然增长的倍率加成
    饮品尿液倍率时间: 15, // 当喝下饮品后倍率加成多长时间（分钟）

    // 漏尿相关
    漏尿阈值:80, // 当前尿液体积超过玩家膀胱大小的百分之多少时会进行漏尿判断,最高为95%
    漏尿基础概率:20, // 漏尿的基础概率
    漏尿概率计算_线性:false, // 漏尿概率增长方式线性
    漏尿概率计算_指数:true, // 漏尿概率增长方式线性
    漏尿概率:20, // 超过阈值后,每10秒的漏尿的概率,随着膀胱越来越满溢会越来越高,最终会100%漏尿
    漏尿检查间隔: 10000, // 10秒
    漏尿上次检查时间: 0,
    漏尿量最小: 10,
    漏尿量最大: 20,
};

export class 膀胱类 extends 功能基类 {
    constructor(膀胱设置){
        super();
        this.参数 = 膀胱设置;
    }

    // 在主界面渲染按钮
    渲染主按钮(ui数据) {
        DrawButton( ui数据.膀胱.主界面设置按钮.设置按钮位置[0],
                    ui数据.膀胱.主界面设置按钮.设置按钮位置[1],
                    ui数据.膀胱.主界面设置按钮.设置按钮大小[0],
                    ui数据.膀胱.主界面设置按钮.设置按钮大小[1],
                    ui数据.膀胱.主界面设置按钮.按钮文本,
                    "White",
                    "");
    }

    初始化子界面(){
        this.参数.子界面页码 = 0;
    }

    绘制子界面(ui数据) {
        DrawText(ui数据.膀胱.子界面标题, 1000, 130, "Black"); //渲染标题
        // 渲染退出按钮
        DrawButton(1815, 75, 90, 90, "", "White", "Icons/Exit.png");

        // 绘制翻页按钮
        DrawBackNextButton(ui数据.膀胱.子UI.翻页.按钮位置[0],
            ui数据.膀胱.子UI.翻页.按钮位置[1],
            ui数据.膀胱.子UI.翻页.按钮大小[0],
            ui数据.膀胱.子UI.翻页.按钮大小[1],
            ui数据.膀胱.子UI.翻页.按钮文本,
            "White",
            "",
            function () {return "";},
            function () {return "";},
            false,
        )

        switch (this.参数.子界面页码) {
            case 0:
                // 当前尿液体积展示
                function 尿液展示(ui,参数) {
                    let 尿液百分比 = (参数.当前尿液体积 / 参数.玩家膀胱大小) * 100;
                    

                    DrawText(ui.膀胱.子UI.当前尿液.文本 + 尿液百分比.toFixed(2).toString() + "%", 
                        ui.膀胱.子UI.当前尿液.位置[0], 
                        ui.膀胱.子UI.当前尿液.位置[1], 
                        "Black");
                }
                尿液展示(ui数据,this.参数);

                break;

            case 1:
                // 绘制总开关
                DrawCheckbox(ui数据.膀胱.子UI.总开关.复选框位置[0],
                    ui数据.膀胱.子UI.总开关.复选框位置[1],
                    ui数据.膀胱.子UI.总开关.复选框大小[0],
                    ui数据.膀胱.子UI.总开关.复选框大小[1],
                    "",
                    this.参数.总开关
                );
                DrawText(ui数据.膀胱.子UI.总开关.主词,
                    ui数据.膀胱.子UI.总开关.描述位置[0],
                    ui数据.膀胱.子UI.总开关.描述位置[1],
                    "Black"
                );

                // 绘制重置按钮
                ElementCreateInput("膀胱重置确认框", "string", "NO", "");
                ElementPosition("膀胱重置确认框", 
                                ui数据.膀胱.子UI.重置.输入框位置[0],
                                ui数据.膀胱.子UI.重置.输入框位置[1],
                                ui数据.膀胱.子UI.重置.输入框大小[0],
                                ui数据.膀胱.子UI.重置.输入框大小[1]
                );

                DrawButton(ui数据.膀胱.子UI.重置.按钮位置[0], 
                        ui数据.膀胱.子UI.重置.按钮位置[1], 
                        ui数据.膀胱.子UI.重置.按钮大小[0],
                        ui数据.膀胱.子UI.重置.按钮大小[1],
                        ui数据.膀胱.子UI.重置.按钮文本, 
                        "White", 
                        ""
                );

                this.绘制带提示文字(ui数据.膀胱.子UI.重置.按钮主词,
                                ui数据.膀胱.子UI.重置.按钮描述位置[0],
                                ui数据.膀胱.子UI.重置.按钮描述位置[1],
                                ui数据.膀胱.子UI.重置.按钮描述位置[2],
                                "Black",
                                "Red",
                                ui数据.膀胱.子UI.重置.按钮详细
                );

                // 膀胱大小
                ElementCreateInput("膀胱体积", "number", this.参数.玩家膀胱大小, 10000);
                ElementPosition("膀胱体积", 
                                ui数据.膀胱.子UI.膀胱大小.输入框位置[0],
                                ui数据.膀胱.子UI.膀胱大小.输入框位置[1],
                                ui数据.膀胱.子UI.膀胱大小.输入框大小[0],
                                ui数据.膀胱.子UI.膀胱大小.输入框大小[1]
                );
                this.绘制带提示文字(ui数据.膀胱.子UI.膀胱大小.主词,
                    ui数据.膀胱.子UI.膀胱大小.输入框描述位置[0],
                    ui数据.膀胱.子UI.膀胱大小.输入框描述位置[1],
                    ui数据.膀胱.子UI.膀胱大小.输入框描述位置[2],
                    "Black",
                    "Red",
                    ui数据.膀胱.子UI.膀胱大小.详情
                );


                // 尿液增长速率
                ElementCreateInput("尿液增长", "number", this.参数.尿液增长速率);
                ElementPosition("尿液增长", 
                                ui数据.膀胱.子UI.尿液增长.输入框位置[0],
                                ui数据.膀胱.子UI.尿液增长.输入框位置[1],
                                ui数据.膀胱.子UI.尿液增长.输入框大小[0],
                                ui数据.膀胱.子UI.尿液增长.输入框大小[1]
                );
                this.绘制带提示文字(ui数据.膀胱.子UI.尿液增长.主词,
                    ui数据.膀胱.子UI.尿液增长.输入框描述位置[0],
                    ui数据.膀胱.子UI.尿液增长.输入框描述位置[1],
                    ui数据.膀胱.子UI.尿液增长.输入框描述位置[2],
                    "Black",
                    "Red",
                    ui数据.膀胱.子UI.尿液增长.详情
                );

                // 漏尿阈值
                ElementCreateInput("漏尿阈值", "number", this.参数.漏尿阈值);
                ElementPosition("漏尿阈值", 
                                ui数据.膀胱.子UI.漏尿阈值.输入框位置[0],
                                ui数据.膀胱.子UI.漏尿阈值.输入框位置[1],
                                ui数据.膀胱.子UI.漏尿阈值.输入框大小[0],
                                ui数据.膀胱.子UI.漏尿阈值.输入框大小[1]
                );
                this.绘制带提示文字(ui数据.膀胱.子UI.漏尿阈值.主词,
                    ui数据.膀胱.子UI.漏尿阈值.输入框描述位置[0],
                    ui数据.膀胱.子UI.漏尿阈值.输入框描述位置[1],
                    ui数据.膀胱.子UI.漏尿阈值.输入框描述位置[2],
                    "Black",
                    "Red",
                    ui数据.膀胱.子UI.漏尿阈值.详情
                );

                // 漏尿概率
                ElementCreateInput("漏尿概率", "number", this.参数.漏尿基础概率);
                ElementPosition("漏尿概率", 
                                ui数据.膀胱.子UI.漏尿概率.输入框位置[0],
                                ui数据.膀胱.子UI.漏尿概率.输入框位置[1],
                                ui数据.膀胱.子UI.漏尿概率.输入框大小[0],
                                ui数据.膀胱.子UI.漏尿概率.输入框大小[1]
                );
                this.绘制带提示文字(ui数据.膀胱.子UI.漏尿概率.主词,
                    ui数据.膀胱.子UI.漏尿概率.输入框描述位置[0],
                    ui数据.膀胱.子UI.漏尿概率.输入框描述位置[1],
                    ui数据.膀胱.子UI.漏尿概率.输入框描述位置[2],
                    "Black",
                    "Red",
                    ui数据.膀胱.子UI.漏尿概率.详情
                );


                break;
                
            case 2:
                // 漏尿概率计算
                DrawText(ui数据.膀胱.子UI.漏尿概率计算方式.标题文本,
                    ui数据.膀胱.子UI.漏尿概率计算方式.标题文本位置[0],
                    ui数据.膀胱.子UI.漏尿概率计算方式.标题文本位置[1],
                    "Black"
                );
                // 线性
                DrawCheckbox(ui数据.膀胱.子UI.漏尿概率计算方式.复选框位置_1[0],
                    ui数据.膀胱.子UI.漏尿概率计算方式.复选框位置_1[1],
                    ui数据.膀胱.子UI.漏尿概率计算方式.复选框大小_1[0],
                    ui数据.膀胱.子UI.漏尿概率计算方式.复选框大小_1[1],
                    "",
                    this.参数.漏尿概率计算_线性
                );
                this.绘制带提示文字(ui数据.膀胱.子UI.漏尿概率计算方式.主词_1,
                    ui数据.膀胱.子UI.漏尿概率计算方式.描述位置_1[0],
                    ui数据.膀胱.子UI.漏尿概率计算方式.描述位置_1[1],
                    ui数据.膀胱.子UI.漏尿概率计算方式.描述位置_1[2],
                    "Black",
                    "Red",
                    ui数据.膀胱.子UI.漏尿概率计算方式.详情_1
                );
                // 指数
                DrawCheckbox(ui数据.膀胱.子UI.漏尿概率计算方式.复选框位置_2[0],
                    ui数据.膀胱.子UI.漏尿概率计算方式.复选框位置_2[1],
                    ui数据.膀胱.子UI.漏尿概率计算方式.复选框大小_2[0],
                    ui数据.膀胱.子UI.漏尿概率计算方式.复选框大小_2[1],
                    "",
                    this.参数.漏尿概率计算_指数
                );
                this.绘制带提示文字(ui数据.膀胱.子UI.漏尿概率计算方式.主词_2,
                    ui数据.膀胱.子UI.漏尿概率计算方式.描述位置_2[0],
                    ui数据.膀胱.子UI.漏尿概率计算方式.描述位置_2[1],
                    ui数据.膀胱.子UI.漏尿概率计算方式.描述位置_2[2],
                    "Black",
                    "Red",
                    ui数据.膀胱.子UI.漏尿概率计算方式.详情_2
                );


                break;
            default:
                break;
        }
        
        // 食物倍率设置

        // 饮品设置

        // 
    }

    子界面交互逻辑处理(ui数据) {
        // 翻页处理
        if (MouseIn(ui数据.膀胱.子UI.翻页.按钮位置[0],
            ui数据.膀胱.子UI.翻页.按钮位置[1],
            ui数据.膀胱.子UI.翻页.按钮大小[0],
            ui数据.膀胱.子UI.翻页.按钮大小[1],
        )) {
            this.清理UI();
            // 下一页
            if (MouseIn(ui数据.膀胱.子UI.翻页.按钮位置[0] + ui数据.膀胱.子UI.翻页.按钮大小[0] / 2,
                ui数据.膀胱.子UI.翻页.按钮位置[1],
                ui数据.膀胱.子UI.翻页.按钮大小[0] / 2,
                ui数据.膀胱.子UI.翻页.按钮大小[1],
            )) {
                if (this.参数.子界面页码 + 1 <= this.参数.子界面总页码){
                    this.参数.子界面页码 += 1;
                }
            }
            // 上一页
            if (MouseIn(ui数据.膀胱.子UI.翻页.按钮位置[0],
                ui数据.膀胱.子UI.翻页.按钮位置[1],
                ui数据.膀胱.子UI.翻页.按钮大小[0] / 2,
                ui数据.膀胱.子UI.翻页.按钮大小[1],
            )) {
                if (this.参数.子界面页码 - 1 >= 0){
                    this.参数.子界面页码 -= 1;
                }
            }
        }

        switch (this.参数.子界面页码) {
            case 1:
                // 总开关
                if (MouseIn(ui数据.膀胱.子UI.总开关.复选框位置[0],
                    ui数据.膀胱.子UI.总开关.复选框位置[1],
                    ui数据.膀胱.子UI.总开关.复选框大小[0],
                    ui数据.膀胱.子UI.总开关.复选框大小[1]
                )) {
                    if (this.参数.总开关) {
                        this.参数.总开关 = false;
                    } else {
                        this.参数.总开关 = true;
                    }
                }

                // 重置按钮
                if (MouseIn(ui数据.膀胱.子UI.重置.按钮位置[0], 
                    ui数据.膀胱.子UI.重置.按钮位置[1], 
                    ui数据.膀胱.子UI.重置.按钮大小[0],
                    ui数据.膀胱.子UI.重置.按钮大小[1],
                    ui数据.膀胱.子UI.重置.按钮文本
                )) {
                    if (ElementValue("膀胱重置确认框") == "YES"){
                        // Player.ExtensionSettings.SABCM.系统设置.模组更新开关 = false;
                        Player.ExtensionSettings.SABCM.膀胱 = 默认模组设置.膀胱;
                        console.log(Player.ExtensionSettings.SABCM.膀胱);
                        ServerPlayerExtensionSettingsSync("SABCM");
                        this.清理UI();
                        PreferenceSubscreenExtensionsClear();
                        // Player.ExtensionSettings.SABCM.系统设置.模组更新开关 = true;
                    }
                }
                break;

            case 2:
                // 漏尿概率计算方式
                // 线性
                if (MouseIn(
                    ui数据.膀胱.子UI.漏尿概率计算方式.复选框位置_1[0],
                    ui数据.膀胱.子UI.漏尿概率计算方式.复选框位置_1[1],
                    ui数据.膀胱.子UI.漏尿概率计算方式.复选框大小_1[0],
                    ui数据.膀胱.子UI.漏尿概率计算方式.复选框大小_1[1]
                )) {
                    this.参数.漏尿概率计算_线性 = true;
                    this.参数.漏尿概率计算_指数 = false;
                }
                // 指数
                if (MouseIn(
                    ui数据.膀胱.子UI.漏尿概率计算方式.复选框位置_2[0],
                    ui数据.膀胱.子UI.漏尿概率计算方式.复选框位置_2[1],
                    ui数据.膀胱.子UI.漏尿概率计算方式.复选框大小_2[0],
                    ui数据.膀胱.子UI.漏尿概率计算方式.复选框大小_2[1]
                )) {
                    this.参数.漏尿概率计算_线性 = false;
                    this.参数.漏尿概率计算_指数 = true;
                }


                break;
        
            default:
                break;
        }
    }

    清理UI() {
        // 移除输入框
        ElementRemove("膀胱重置确认框");
        ElementRemove("膀胱体积");
        ElementRemove("尿液增长");
        ElementRemove("漏尿阈值");
        ElementRemove("漏尿概率");
    }

    更新参数() {
        // 更新参数
        // 膀胱体积
        this.参数.玩家膀胱大小基准值 = Math.max(10, Math.min(ElementValue("膀胱体积"), this.参数.玩家膀胱最大大小));
        this.参数.尿液增长速率 = Math.max(0.1, Math.min(parseFloat(ElementValue("尿液增长")) || 0.5, 1000));
        this.参数.漏尿阈值 = Math.max(50, Math.min(parseFloat(ElementValue("漏尿阈值")) || 5, 95));
        this.参数.漏尿基础概率 = Math.max(1, Math.min(parseFloat(ElementValue("漏尿概率")) || 1, 100));
    }

    退出子界面() {
        // 更新参数
        this.更新参数();
        // 清理ui
        this.清理UI();
        Player.ExtensionSettings.SABCM.膀胱 = this.参数;
    }


    更新(经过时间) {
        if (this.参数.总开关){
            this.膀胱大小更新();
            this.尿液更新(经过时间);
            this.漏尿概率更新();
            this.漏尿();


            Player.ExtensionSettings.SABCM.膀胱 = this.参数;
            console.log("当前尿液体积：" + String(this.参数.当前尿液体积));
        }
    }


    // 功能函数

    // 获取当前尿液的百分比
    获取尿液百分比() {
        let 百分比 = (this.参数.当前尿液体积 / this.参数.玩家膀胱大小) * 100;
        return 百分比;
    } 

    // 更新膀胱大小,用于监控是否因为某些条件改变了膀胱大小
    膀胱大小更新() {
        this.参数.玩家膀胱大小 = this.参数.玩家膀胱大小基准值 - (this.参数.玩家膀胱大小基准值 * this.参数.玩家膀胱大小损失值);
    }

    // 更新尿液
    尿液更新(时间) {
        // 确保不超过膀胱体积
        let 随机量 = Math.floor(Math.random() * (this.参数.尿液增长随机值[1] - this.参数.尿液增长随机值[0] + 1)) + this.参数.尿液增长随机值[0];
        let 尿液生成量 = (((时间 * (this.参数.尿液增长速率 / (60 * 1000)))*随机量)*this.参数.总倍率);

        if (this.参数.当前尿液体积 + 尿液生成量 > this.参数.玩家膀胱大小){
            this.参数.当前尿液体积 = this.参数.玩家膀胱大小;
        } else {
            this.参数.当前尿液体积 += 尿液生成量;
        }
    }

    漏尿概率更新() {
        let 百分比 = this.获取尿液百分比();
        let 概率 = this.参数.漏尿基础概率 / 100;
        if (百分比 >= this.参数.漏尿阈值) {
            if (this.参数.漏尿概率计算_线性) {
                概率 = 0.01 + ((百分比 - this.参数.漏尿阈值) / (100 - this.参数.漏尿阈值)) * 0.99;
            } else if (this.参数.漏尿概率计算_指数) {
                概率 = 0.01 + Math.pow((百分比 - this.参数.漏尿阈值) / (100 - this.参数.漏尿阈值), 2) * 0.99;
            }
        } else {
            概率 = 0;
        }

        this.参数.漏尿概率 = Math.min(Math.max(概率 * 100, 1), 100); // 存储为百分比
        console.log(this.参数.漏尿概率)
    }


    漏尿() {
        let 当前时间 = Date.now();
        let 百分比 = this.获取尿液百分比();

        if (
            当前时间 - this.参数.漏尿上次检查时间 >= this.参数.漏尿检查间隔 &&
            百分比 >= this.参数.漏尿阈值
        ) {
            let 概率 = this.参数.漏尿概率 / 100; // 转换为0-1范围
            if (Math.random() < 概率) {
                let 漏尿量 = this.参数.漏尿量最小 + Math.random() * (this.参数.漏尿量最大 - this.参数.漏尿量最小);
                this.参数.当前尿液体积 = Math.max(this.参数.当前尿液体积 - 漏尿量, 0);

                if (InventoryGet(Player, "ItemPelvis")?.Asset?.Name === "Diaper") {
                    ChatRoomSendLocal(`*${Player.Name}的尿布吸收了${漏尿量.toFixed(1)}ml的液体...*`);
                } else {
                    ChatRoomSendLocal(`*${Player.Name}不自觉地漏了${漏尿量.toFixed(1)}ml尿液...*`);
                }
            }

            this.参数.漏尿上次检查时间 = 当前时间;
        }
    }

}