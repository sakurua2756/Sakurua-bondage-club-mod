// 膀胱功能
import { 功能基类 } from "./功能基类";
// 膀胱子界面ui属性
export let 膀胱系统ui属性 = {
    // 在主设置界面的按钮属性
    主界面设置按钮:{
        按钮文本:"膀胱设置",
        设置按钮位置:[500,200],
        设置按钮大小:[200,80]
    },

    // 子界面设置文本
    子界面标题:"膀胱设置",

    子UI:{
        总开关:{
            复选框位置:[200,200],
            复选框大小:[70,70],

            描述位置:[400,235],
            主词:"启用膀胱功能",
        },
        重置:{
            按钮文本:"重置",
            按钮位置:[200, 350],
            按钮大小:[200,80],

            输入框位置:[120,390],
            输入框大小:[120,80],
            
            按钮描述位置:[600, 390],
            按钮主词:"！！！！重置mod功能设置",
            按钮详细:"！！！！警告，重置会恢复膀胱功能的所有设置为默认，请在按钮前的输入框内输入“YES”（区分大小写）来确认使用按钮"
        },
    }
}; 

// 膀胱功能设置
export const 膀胱设置 = {
    总开关:true, // 膀胱功能的总开关
    玩家膀胱大小: 400, //  可容纳的最大尿液（ml）
    当前尿液体积: 0,  // 当期存在的尿液体积（ml）
    尿液增长速率: 10,  // 每分钟自然增长的尿液（ml）
    食物尿液倍率: 1.2, // 当吃下食物后的一段时间内尿液自然增长的倍率加成
    食物尿液倍率时间: 30, // 当吃下食物后倍率加成多长时间（分钟）
    饮品尿液倍率: 2.0, // 当喝下饮品后的一段时间内尿液自然增长的倍率加成
    饮品尿液倍率时间: 15, // 当喝下饮品后倍率加成多长时间（分钟）
};

export class 膀胱类 extends 功能基类 {
    constructor(膀胱设置){
        super();
        this.参数 = 膀胱设置;
    }

    // 在主界面渲染按钮
    渲染主按钮(ui数据) {
        DrawButton( ui数据.膀胱.主界面设置按钮.设置按钮位置[0],
                    ui数据.膀胱.主界面设置按钮.设置按钮位置[1],
                    ui数据.膀胱.主界面设置按钮.设置按钮大小[0],
                    ui数据.膀胱.主界面设置按钮.设置按钮大小[1],
                    ui数据.膀胱.主界面设置按钮.按钮文本,
                    "White",
                    "");
    }

    绘制子界面(ui数据) {
        DrawText(ui数据.膀胱.子界面标题, 1000, 130, "Black"); //渲染标题
        // 渲染退出按钮
        DrawButton(1815, 75, 90, 90, "", "White", "Icons/Exit.png");

        // 绘制总开关
        DrawCheckbox(ui数据.膀胱.子UI.总开关.复选框位置[0],
            ui数据.膀胱.子UI.总开关.复选框位置[1],
            ui数据.膀胱.子UI.总开关.复选框大小[0],
            ui数据.膀胱.子UI.总开关.复选框大小[1],
            "",
            this.参数.总开关
        );
        DrawText(ui数据.膀胱.子UI.总开关.主词,
            ui数据.膀胱.子UI.总开关.描述位置[0],
            ui数据.膀胱.子UI.总开关.描述位置[1],
            "Black"
        );
        // 绘制重置按钮
        ElementCreateInput("膀胱重置确认框", "string", "NO", "");
        ElementPosition("膀胱重置确认框", 
                        ui数据.膀胱.子UI.重置.输入框位置[0],
                        ui数据.膀胱.子UI.重置.输入框位置[1],
                        ui数据.膀胱.子UI.重置.输入框大小[0],
                        ui数据.膀胱.子UI.重置.输入框大小[1]
        );

        DrawButton(ui数据.膀胱.子UI.重置.按钮位置[0], 
                   ui数据.膀胱.子UI.重置.按钮位置[1], 
                   ui数据.膀胱.子UI.重置.按钮大小[0],
                   ui数据.膀胱.子UI.重置.按钮大小[1],
                   ui数据.膀胱.子UI.重置.按钮文本, 
                   "White", 
                   ""
        );

        this.绘制带提示文字(ui数据.膀胱.子UI.重置.按钮主词,
                           ui数据.膀胱.子UI.重置.按钮描述位置[0],
                           ui数据.膀胱.子UI.重置.按钮描述位置[1],
                           0,
                           "Black",
                           "Red",
                           ui数据.膀胱.子UI.重置.按钮详细
        );
        // 绘制翻页按钮
    }

    子界面交互逻辑处理(ui数据) {
        // 总开关
        if (MouseIn(ui数据.膀胱.子UI.总开关.复选框位置[0],
            ui数据.膀胱.子UI.总开关.复选框位置[1],
            ui数据.膀胱.子UI.总开关.复选框大小[0],
            ui数据.膀胱.子UI.总开关.复选框大小[1]
        )) {
            if (this.参数.总开关) {
                this.参数.总开关 = false;
            } else {
                this.参数.总开关 = true;
            }
        }



    }

    清理UI() {
        // 移除输入框
        ElementRemove("膀胱重置确认框");
    }

    退出子界面() {
        // 清理ui
        this.清理UI();
        Player.ExtensionSettings.SABCM.膀胱 = this.参数;
    }


    更新(经过时间) {
        // 计算尿液自然增长，带离线计算功能。
        this.参数.当前尿液体积 += (经过时间 * (this.参数.尿液增长速率 / (60 * 1000)));
        Player.ExtensionSettings.SABCM.膀胱 = this.参数;
        console.log("当前尿液体积：" + String(this.参数.当前尿液体积));
    }


    // 功能函数

    尿液更新() {

    }

}