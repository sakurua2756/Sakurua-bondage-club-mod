// 系统设置功能
import { 功能基类 } from "./功能基类";
// 系统设置子界面ui属性
export let 系统设置ui属性 = {
    // 在主设置界面的按钮属性
    主界面设置按钮:{
        按钮文本:"系统设置",
        设置按钮位置:[500,800],
        设置按钮大小:[200,80]
    },

    // 子界面设置文本
    子界面标题:"SABCM系统设置",

    子UI:{
        模组更新频率:{
            输入框主词:"模组更新频率（毫秒）",
            输入框属性详情:"控制mod的所有内容的更新，上限：5000毫秒，下限：0毫秒，为0时代表每一个游戏帧都更新一次，不建议太低",
            输入框文本位置大小:[600,250],

            输入框背景色:"",
            输入框位置:[300,250],
            输入框大小:[200,70]
        },
        强制重置:{
            按钮文本:"强制重置",
            按钮位置:[200, 350],
            按钮大小:[200,80],

            输入框位置:[120,390],
            输入框大小:[120,80],
            
            按钮描述位置:[600, 390],
            按钮主词:"！！！！强制重置mod",
            按钮详细:"！！！！警告，强制重置会丢失一切mod数据，请在按钮前的输入框内输入“YES”（区分大小写）来确认使用按钮"
        },
        离线更新:{
            复选框位置:[200,500],
            复选框大小:[70,70],

            描述位置:[400,535,50],
            主词:"离线更新",
            详情:"勾选时启动离线更新,就算下线mod也会根据时间更新,硬核模式下无法取消"
        }
    }
}; 

// mod系统设置
export const 系统设置 = {
    模组更新开关:true, // 控制模组功能更新的开关
    模组更新频率:1000, // 单位：（ms）
    模组上次更新时间:0, // 模组上次执行更新逻辑的时间戳
    离线更新状态:true,  // 是否启用mod离线更新功能
};

export class 系统设置类 extends 功能基类 {
    constructor(系统设置, 默认设置){
        super();
        this.参数 = 系统设置;
        this.默认参数 = 默认设置;
    }

    // 在主界面渲染按钮
    渲染主按钮(ui数据) {
        DrawButton( ui数据.系统设置.主界面设置按钮.设置按钮位置[0],
                    ui数据.系统设置.主界面设置按钮.设置按钮位置[1],
                    ui数据.系统设置.主界面设置按钮.设置按钮大小[0],
                    ui数据.系统设置.主界面设置按钮.设置按钮大小[1],
                    ui数据.系统设置.主界面设置按钮.按钮文本,
                    "White",
                    ""
        );
    }

    绘制子界面(ui数据) {
        DrawText(ui数据.系统设置.子界面标题, 1000, 130, "Black"); //渲染标题
        // 渲染退出按钮
        DrawButton(1815, 75, 90, 90, "", "White", "Icons/Exit.png");

        // 绘制更新频率输入框和描述文本
        ElementCreateInput("模组更新频率输入框", "number", this.参数.模组更新频率.toString(), 5000);
        ElementPosition("模组更新频率输入框", 
                        ui数据.系统设置.子UI.模组更新频率.输入框位置[0],
                        ui数据.系统设置.子UI.模组更新频率.输入框位置[1],
                        ui数据.系统设置.子UI.模组更新频率.输入框大小[0],
                        ui数据.系统设置.子UI.模组更新频率.输入框大小[1]
        );
        this.绘制带提示文字(ui数据.系统设置.子UI.模组更新频率.输入框主词,
                           ui数据.系统设置.子UI.模组更新频率.输入框文本位置大小[0],
                           ui数据.系统设置.子UI.模组更新频率.输入框文本位置大小[1],
                           0,
                           "Black",
                           "Red",
                           ui数据.系统设置.子UI.模组更新频率.输入框属性详情
        );

        // 强制重置按钮，用于强制重置模组设置的值。补全缺少的元素
        ElementCreateInput("强制重置确认框", "string", "NO", "");
        ElementPosition("强制重置确认框", 
                        ui数据.系统设置.子UI.强制重置.输入框位置[0],
                        ui数据.系统设置.子UI.强制重置.输入框位置[1],
                        ui数据.系统设置.子UI.强制重置.输入框大小[0],
                        ui数据.系统设置.子UI.强制重置.输入框大小[1]
        );

        DrawButton(ui数据.系统设置.子UI.强制重置.按钮位置[0], 
                   ui数据.系统设置.子UI.强制重置.按钮位置[1], 
                   ui数据.系统设置.子UI.强制重置.按钮大小[0],
                   ui数据.系统设置.子UI.强制重置.按钮大小[1],
                   ui数据.系统设置.子UI.强制重置.按钮文本, 
                   "White", 
                   ""
        );

        this.绘制带提示文字(ui数据.系统设置.子UI.强制重置.按钮主词,
                           ui数据.系统设置.子UI.强制重置.按钮描述位置[0],
                           ui数据.系统设置.子UI.强制重置.按钮描述位置[1],
                           0,
                           "Black",
                           "Red",
                           ui数据.系统设置.子UI.强制重置.按钮详细
        );

        // 离线更新复选框，用于开关离线更新。
        DrawCheckbox(ui数据.系统设置.子UI.离线更新.复选框位置[0],
                     ui数据.系统设置.子UI.离线更新.复选框位置[1],
                     ui数据.系统设置.子UI.离线更新.复选框大小[0],
                     ui数据.系统设置.子UI.离线更新.复选框大小[1],
                     "",
                     this.参数.离线更新状态
        );

        this.绘制带提示文字(ui数据.系统设置.子UI.离线更新.主词,
                           ui数据.系统设置.子UI.离线更新.描述位置[0],
                           ui数据.系统设置.子UI.离线更新.描述位置[1],
                           ui数据.系统设置.子UI.离线更新.描述位置[2],
                           "Black",
                           "Red",
                           ui数据.系统设置.子UI.离线更新.详情
        );
    }

    子界面交互逻辑处理(ui数据) {
        // 强制重置按钮处理
        if (MouseIn(ui数据.系统设置.子UI.强制重置.按钮位置[0], 
                    ui数据.系统设置.子UI.强制重置.按钮位置[1], 
                    ui数据.系统设置.子UI.强制重置.按钮大小[0],
                    ui数据.系统设置.子UI.强制重置.按钮大小[1]
                )) {
                if (ElementValue("强制重置确认框") == "YES"){
                    // Player.ExtensionSettings.SABCM.系统设置.模组更新开关 = false;
                    Player.ExtensionSettings.SABCM = this.默认参数;
                    console.log(Player.ExtensionSettings.SABCM);
                    ServerPlayerExtensionSettingsSync("SABCM");
                    this.清理UI();
                    PreferenceSubscreenExtensionsClear();
                    // Player.ExtensionSettings.SABCM.系统设置.模组更新开关 = true;
                }
        }

        if (MouseIn(ui数据.系统设置.子UI.离线更新.复选框位置[0],
                    ui数据.系统设置.子UI.离线更新.复选框位置[1],
                    ui数据.系统设置.子UI.离线更新.复选框大小[0],
                    ui数据.系统设置.子UI.离线更新.复选框大小[1],
                )){
            if (this.参数.离线更新状态) {
                this.参数.离线更新状态 = false;
            } else {
                this.参数.离线更新状态 = true;
            }
        }
    }

    清理UI() {
        // 移除输入框
        ElementRemove("模组更新频率输入框");
        ElementRemove("强制重置确认框");
    }

    退出子界面() {
        // 更新修改的值
        // 更新模组更新频率并检测是否超限
        this.参数.模组更新频率 = ElementValue("模组更新频率输入框");
        if (this.参数.模组更新频率 > 5000) {
            this.参数.模组更新频率 = 5000;
        }
        if (this.参数.模组更新频率 < 0) {
            this.参数.模组更新频率 = 0;
        }

        // 清理ui
        this.清理UI();

        // 保存设置到全局
        Player.ExtensionSettings.SABCM.系统设置 = this.参数;
    }


}